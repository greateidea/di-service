{"remainingRequest":"/Users/a18011405704/Desktop/code/di-service/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/a18011405704/Desktop/code/di-service/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/a18011405704/Desktop/code/di-service/node_modules/source-map-loader/index.js!/Users/a18011405704/Desktop/code/di-service/src/di/index.ts","dependencies":[{"path":"/Users/a18011405704/Desktop/code/di-service/src/di/index.ts","mtime":1605095665578},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/cache-loader/dist/cjs.js","mtime":1605078470464},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/thread-loader/dist/cjs.js","mtime":1605078476739},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/babel-loader/lib/index.js","mtime":1605078442188},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/source-map-loader/index.js","mtime":1605078476388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9hMTgwMTE0MDU3MDQvRGVza3RvcC9jb2RlL2RpLXNlcnZpY2Uvbm9kZV9tb2R1bGVzL2RvY3otY29yZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdC5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaWYgKHR5cGVvZiBEaWN0ICE9PSAndW5kZWZpbmVkJyAmJiBEaWN0ICYmIERpY3QgPT09IE9iamVjdChEaWN0KSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKERpY3QpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERpY3QsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJEaWN0IiwKICAgICAgZmlsZW5hbWU6ICJzcmMvZGkvaW5kZXgudHMiCiAgICB9CiAgfSk7Cn0KCnZhciBkZXBlbmRlbmNpZXNJbnRhbmNlcyA9IFtdOwpleHBvcnQgdmFyIFNlcnZpY2VzID0ge307CgppZiAodHlwZW9mIFNlcnZpY2VzICE9PSAndW5kZWZpbmVkJyAmJiBTZXJ2aWNlcyAmJiBTZXJ2aWNlcyA9PT0gT2JqZWN0KFNlcnZpY2VzKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKFNlcnZpY2VzKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTZXJ2aWNlcywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIlNlcnZpY2VzIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvZGkvaW5kZXgudHMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgc2F2ZURlcGVuZGVuY2llc0ludGFuY2VzID0gZnVuY3Rpb24gc2F2ZURlcGVuZGVuY2llc0ludGFuY2VzKGRlcGVuSW5zdGFjZSkgewogIHRyeSB7CiAgICAvLyDmnI3liqHlt7Lnu4/lrZjlnKjmipvlh7rplJnor68KICAgIGlmIChkZXBlbmRlbmNpZXNJbnRhbmNlcy5zb21lKGZ1bmN0aW9uIChkZXBlbikgewogICAgICByZXR1cm4gZGVwZW4uZGVwZW5LZXkgPT09IGRlcGVuSW5zdGFjZS5kZXBlbktleTsKICAgIH0pKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiIHNlcnZpY2UgJyIuY29uY2F0KGRlcGVuSW5zdGFjZS5kZXBlbktleSwgIicgaXMgYWxyZWFkeSBleGlzdHMuIikpOwogICAgfQoKICAgIGRlcGVuZGVuY2llc0ludGFuY2VzLnB1c2goZGVwZW5JbnN0YWNlKTsKICAgIFNlcnZpY2VzW2RlcGVuSW5zdGFjZS5kZXBlbktleV0gPSBkZXBlbkluc3RhY2UuZGVwZW5LZXk7IC8vIOS/neWtmOW9k+WJjeaJgOacieeahOacjeWKoeWQjeensAoKICAgIGNvbnNvbGUubG9nKCdbc2F2ZSBkZXBlbmRlbmNpZXNJbnRhbmNlc10gJywgZGVwZW5kZW5jaWVzSW50YW5jZXMsIFNlcnZpY2VzKTsKICB9IGNhdGNoIChlKSB7CiAgICBjb25zb2xlLndhcm4oZSk7CiAgfQp9OwovKioKICogWydzZXJ2aWNlMScsICdzZXJ2aWNlMicsICdzZXJ2aWNlMycsLi4uXQo9PiB7CiAgICAgc2VydmljZTE6IHNlcnZpY2UxSW5zdGFuY2UsCiAgICAgc2VydmljZTI6IHNlcnZpY2UySW5zdGFuY2UsCiAgICAgc2VydmljZTM6IHNlcnZpY2UzSW5zdGFuY2UsCiAgICAgIC4uLgogICAgfQoqLwoKaWYgKHR5cGVvZiBzYXZlRGVwZW5kZW5jaWVzSW50YW5jZXMgIT09ICd1bmRlZmluZWQnICYmIHNhdmVEZXBlbmRlbmNpZXNJbnRhbmNlcyAmJiBzYXZlRGVwZW5kZW5jaWVzSW50YW5jZXMgPT09IE9iamVjdChzYXZlRGVwZW5kZW5jaWVzSW50YW5jZXMpICYmIE9iamVjdC5pc0V4dGVuc2libGUoc2F2ZURlcGVuZGVuY2llc0ludGFuY2VzKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzYXZlRGVwZW5kZW5jaWVzSW50YW5jZXMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJzYXZlRGVwZW5kZW5jaWVzSW50YW5jZXMiLAogICAgICBmaWxlbmFtZTogInNyYy9kaS9pbmRleC50cyIKICAgIH0KICB9KTsKfQoKZXhwb3J0IHZhciBnZXREZXBlbmRlbmNpZXNJbnRhbmNlcyA9IGZ1bmN0aW9uIGdldERlcGVuZGVuY2llc0ludGFuY2VzKGRlcGVuS2V5cykgewogIHZhciBkZXBlbnMgPSBkZXBlbktleXMucmVkdWNlKGZ1bmN0aW9uIChyZXN1bHQsIGN1cnJlbnRLZXkpIHsKICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihkZXBlbmRlbmNpZXNJbnRhbmNlcyksCiAgICAgICAgX3N0ZXA7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgZGVwZW4gPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgaWYgKGRlcGVuLmRlcGVuS2V5ID09PSBjdXJyZW50S2V5KSB7CiAgICAgICAgICBpZiAoIWRlcGVuLmRlcGVuSW5zdGFuY2UpIHsKICAgICAgICAgICAgdmFyIERlcGVuQ29uc3RydXRvciA9IGRlcGVuLmRlcGVuRGVzLmN0b3I7CiAgICAgICAgICAgIGRlcGVuLmRlcGVuSW5zdGFuY2UgPSBuZXcgRGVwZW5Db25zdHJ1dG9yKCk7CiAgICAgICAgICB9CgogICAgICAgICAgcmVzdWx0W2N1cnJlbnRLZXldID0gZGVwZW4uZGVwZW5JbnN0YW5jZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KCiAgICByZXR1cm4gcmVzdWx0OwogIH0sIHt9KTsKICBjb25zb2xlLmxvZygnW2dldCBkZXBlbmRlbmNpZXNJbnRhbmNlc10gJywgZGVwZW5zKTsKICByZXR1cm4gZGVwZW5zOwp9OwoKaWYgKHR5cGVvZiBnZXREZXBlbmRlbmNpZXNJbnRhbmNlcyAhPT0gJ3VuZGVmaW5lZCcgJiYgZ2V0RGVwZW5kZW5jaWVzSW50YW5jZXMgJiYgZ2V0RGVwZW5kZW5jaWVzSW50YW5jZXMgPT09IE9iamVjdChnZXREZXBlbmRlbmNpZXNJbnRhbmNlcykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShnZXREZXBlbmRlbmNpZXNJbnRhbmNlcykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2V0RGVwZW5kZW5jaWVzSW50YW5jZXMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJnZXREZXBlbmRlbmNpZXNJbnRhbmNlcyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2RpL2luZGV4LnRzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0IDogdW5kZWZpbmVkOwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihkZXBlbmRlbmNpZXNJbnRhbmNlcywgImRlcGVuZGVuY2llc0ludGFuY2VzIiwgIi9Vc2Vycy9hMTgwMTE0MDU3MDQvRGVza3RvcC9jb2RlL2RpLXNlcnZpY2Uvc3JjL2RpL2luZGV4LnRzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoU2VydmljZXMsICJTZXJ2aWNlcyIsICIvVXNlcnMvYTE4MDExNDA1NzA0L0Rlc2t0b3AvY29kZS9kaS1zZXJ2aWNlL3NyYy9kaS9pbmRleC50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHNhdmVEZXBlbmRlbmNpZXNJbnRhbmNlcywgInNhdmVEZXBlbmRlbmNpZXNJbnRhbmNlcyIsICIvVXNlcnMvYTE4MDExNDA1NzA0L0Rlc2t0b3AvY29kZS9kaS1zZXJ2aWNlL3NyYy9kaS9pbmRleC50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGdldERlcGVuZGVuY2llc0ludGFuY2VzLCAiZ2V0RGVwZW5kZW5jaWVzSW50YW5jZXMiLCAiL1VzZXJzL2ExODAxMTQwNTcwNC9EZXNrdG9wL2NvZGUvZGktc2VydmljZS9zcmMvZGkvaW5kZXgudHMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/a18011405704/Desktop/code/di-service/src/di/index.ts"],"names":["dependenciesIntances","Services","saveDependenciesIntances","depenInstace","some","depen","depenKey","Error","push","console","log","e","warn","getDependenciesIntances","depenKeys","depens","reduce","result","currentKey","depenInstance","DepenConstrutor","depenDes","ctor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,oBAA2C,GAAG,EAApD;AACA,OAAQ,IAAMC,QAAc,GAAG,EAAvB;;;;;;;;;;;;;AAER,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,YAAD,EAAuC;AAC7E,MAAI;AACF;AACA,QACEH,oBAAoB,CAACI,IAArB,CACE,UAACC,KAAD;AAAA,aAAgCA,KAAK,CAACC,QAAN,KAAmBH,YAAY,CAACG,QAAhE;AAAA,KADF,CADF,EAIE;AACA,YAAM,IAAIC,KAAJ,qBAAuBJ,YAAY,CAACG,QAApC,0BAAN;AACD;;AACDN,IAAAA,oBAAoB,CAACQ,IAArB,CAA0BL,YAA1B;AACAF,IAAAA,QAAQ,CAACE,YAAY,CAACG,QAAd,CAAR,GAAkCH,YAAY,CAACG,QAA/C,CAVE,CAUuD;;AAEzDG,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CV,oBAA5C,EAAkEC,QAAlE;AAED,GAdD,CAcE,OAAOU,CAAP,EAAU;AACVF,IAAAA,OAAO,CAACG,IAAR,CAAaD,CAAb;AACD;AACF,CAlBM;AAsBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA,OAAO,IAAME,uBAAsD,GAAG,SAAzDA,uBAAyD,CAAAC,SAAS,EAAI;AACjF,MAAMC,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAACC,MAAD,EAASC,UAAT,EAAwB;AAAA,+CAClClB,oBADkC;AAAA;;AAAA;AACtD,0DAA0C;AAAA,YAA/BK,KAA+B;;AACxC,YAAIA,KAAK,CAACC,QAAN,KAAmBY,UAAvB,EAAmC;AACjC,cAAI,CAACb,KAAK,CAACc,aAAX,EAA0B;AACxB,gBAAMC,eAAe,GAAGf,KAAK,CAACgB,QAAN,CAAeC,IAAvC;AACAjB,YAAAA,KAAK,CAACc,aAAN,GAAsB,IAAIC,eAAJ,EAAtB;AACD;;AAEDH,UAAAA,MAAM,CAACC,UAAD,CAAN,GAAqBb,KAAK,CAACc,aAA3B;AACD;AACF;AAVqD;AAAA;AAAA;AAAA;AAAA;;AAYtD,WAAOF,MAAP;AACD,GAbc,EAaZ,EAbY,CAAf;AAcAR,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CK,MAA3C;AACA,SAAOA,MAAP;AACD,CAjBM;;;;;;;;;;;;;;;;;;;;;;0BAnCDf,oB;0BACQC,Q;0BAEDC,wB;0BAgCAW,uB","sourcesContent":["/**\n * 服务应该包含 类，函数，常量\n */\n\ntype depsDes = {\n  ctor: { new (...args: any[]): {} }; // 类构造器\n  staticArguments: any[];\n  supportsDelayedInstantiation?: boolean;\n};\ntype provider = () => any;\ntype dependenciesIntancy = { depenKey: string; depenDes: depsDes; depenInstance?: any};\n\nexport type Dict = { [key: string]: any }\n\nconst dependenciesIntances: dependenciesIntancy[] = [];\nexport  const Services: Dict = {};\n\nexport const saveDependenciesIntances = (depenInstace: dependenciesIntancy) => {\n  try {\n    // 服务已经存在抛出错误\n    if (\n      dependenciesIntances.some(\n        (depen: dependenciesIntancy) => depen.depenKey === depenInstace.depenKey,\n      )\n    ) {\n      throw new Error(` service '${depenInstace.depenKey}' is already exists.`);\n    }\n    dependenciesIntances.push(depenInstace);\n    Services[depenInstace.depenKey] = depenInstace.depenKey; // 保存当前所有的服务名称\n\n    console.log('[save dependenciesIntances] ', dependenciesIntances, Services);\n\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\n\n\n/**\n * ['service1', 'service2', 'service3',...]\n=> {\n     service1: service1Instance,\n     service2: service2Instance,\n     service3: service3Instance,\n      ...\n    }\n*/\n\nexport const getDependenciesIntances: (depenKeys: string[]) => Dict = depenKeys => {\n  const depens = depenKeys.reduce((result, currentKey) => {\n    for (const depen of dependenciesIntances) {\n      if (depen.depenKey === currentKey) {\n        if (!depen.depenInstance) {\n          const DepenConstrutor = depen.depenDes.ctor;\n          depen.depenInstance = new DepenConstrutor();\n        }\n\n        result[currentKey] = depen.depenInstance;\n      }\n    }\n\n    return result;\n  }, {} as Dict);\n  console.log('[get dependenciesIntances] ', depens);\n  return depens;\n};\n"]}]}