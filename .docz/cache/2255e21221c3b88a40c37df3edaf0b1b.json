{"remainingRequest":"/Users/a18011405704/Desktop/code/di-service/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/a18011405704/Desktop/code/di-service/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/a18011405704/Desktop/code/di-service/node_modules/source-map-loader/index.js!/Users/a18011405704/Desktop/code/di-service/src/di/decorate/injector.ts","dependencies":[{"path":"/Users/a18011405704/Desktop/code/di-service/src/di/decorate/injector.ts","mtime":1605096700152},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/cache-loader/dist/cjs.js","mtime":1605078470464},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/thread-loader/dist/cjs.js","mtime":1605078476739},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/babel-loader/lib/index.js","mtime":1605078442188},{"path":"/Users/a18011405704/Desktop/code/di-service/node_modules/source-map-loader/index.js","mtime":1605078476388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCB7IHNhdmVEZXBlbmRlbmNpZXNJbnRhbmNlcyB9IGZyb20gJy4uL2luZGV4JzsKCi8qKgogKiBAcGFyYW0ga2V5IAogKiBAcGFyYW0gc3VwcG9ydHNEZWxheWVkSW5zdGFudGlhdGlvbiAKICog55Sz5piO5ZKM5a6e546w5YiG56a7CiAqIOWmguS9leaYr+acjeWKoeeUs+aYjuaJp+ihjAogIDEu5YOPZHZh5LiA5qC35Zyo5bqU55So5ZCv5Yqo55qE5pe25YCZ6Ieq5bex5omL5Yqo5rOo5YaMCiAgMi7lg49WU0NPREXkuIDmoLflhajpg6joh6rlt7HmiYvliqjms6jlhowKICAzLuWDj3VtaeS4gOagt+ivu+WPlueUn+aIkOS4tOaXtuaWh+S7tuiHquWKqOaJp+ihjOazqOWGjO+8iOWmguS9leeDreabtOaWsO+8n++8iQogKi8KZXhwb3J0IGZ1bmN0aW9uIEluamVjdGFibGUoa2V5LCBzdXBwb3J0c0RlbGF5ZWRJbnN0YW50aWF0aW9uKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChjdG9yKSB7CiAgICB2YXIgc2VydmljZUtleSA9IGtleSB8fCBjdG9yLmNvdHJOYW1lIHx8IGN0b3IubmFtZTsKICAgIGNvbnNvbGUubG9nKCJbSW5qZWN0YWJsZV0gIi5jb25jYXQoc2VydmljZUtleSwgIiAiKSwgY3Rvcik7CiAgICBzYXZlRGVwZW5kZW5jaWVzSW50YW5jZXMoewogICAgICBkZXBlbktleTogc2VydmljZUtleSwKICAgICAgLy8g55u05o6l5Lul57G75ZCN5Li66ZSuIOS5n+WPr+S7peWDj2FuZ3VsYXLkuIDmoLfmj5Dkvptwcm92ZWRlcuino+aekOS4gOS4i+aPkOS+m+acjeWKoSDmnaXmianlsZXmnI3liqHnmoTlhoXlrrkKICAgICAgZGVwZW5EZXM6IHsKICAgICAgICBjdG9yLAogICAgICAgIHN0YXRpY0FyZ3VtZW50czogW10sCiAgICAgICAgc3VwcG9ydHNEZWxheWVkSW5zdGFudGlhdGlvbgogICAgICB9CiAgICB9KTsKICB9Owp9CgppZiAodHlwZW9mIEluamVjdGFibGUgIT09ICd1bmRlZmluZWQnICYmIEluamVjdGFibGUgJiYgSW5qZWN0YWJsZSA9PT0gT2JqZWN0KEluamVjdGFibGUpICYmIE9iamVjdC5pc0V4dGVuc2libGUoSW5qZWN0YWJsZSkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSW5qZWN0YWJsZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkluamVjdGFibGUiLAogICAgICBmaWxlbmFtZTogInNyYy9kaS9kZWNvcmF0ZS9pbmplY3Rvci50cyIKICAgIH0KICB9KTsKfQoKZXhwb3J0IHZhciBSZWdpc3RlclNlcnZpY2VCeVByb3ZpZGVyID0gZnVuY3Rpb24gUmVnaXN0ZXJTZXJ2aWNlQnlQcm92aWRlcihwcm92aWRlciwgcHJvdmlkZXJUeXBlLCBzZXJ2aWNlS2V5LCBzdGF0aWNBcmd1bWVudHMsIHN1cHBvcnRzRGVsYXllZEluc3RhbnRpYXRpb24pIHsKICB0cnkgewogICAgdmFyIHJlc3VsdCA9IHByb3ZpZGVyKCk7CiAgICB2YXIgZGVmYXVsdERlcGVuS2V5ID0gcHJvdmlkZXJUeXBlICE9PSAnQ29uc3QnID8gcmVzdWx0Lm5hbWUgOiB1bmRlZmluZWQ7CiAgICB2YXIgZGVwZW5LZXkgPSBzZXJ2aWNlS2V5IHx8IGRlZmF1bHREZXBlbktleTsKCiAgICBpZiAoIWRlcGVuS2V5KSB7CiAgICAgIHRocm93IG5ldyBFcnJvcignbmVlZCBhIHNlcnZpY2VLZXkuJyk7CiAgICB9CgogICAgaWYgKCFyZXN1bHQpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gbm90IGdldCBTZXJ2aWNlIGZyb20gcHJvdmlkZXIsIGNoZWNrIHlvdXIgcHJvdmlkZXJcJ3MgcmV0dXJucycpOwogICAgfQoKICAgIHNhdmVEZXBlbmRlbmNpZXNJbnRhbmNlcyh7CiAgICAgIGRlcGVuS2V5LAogICAgICAvLyDlpoLmnpznsbvlnovmmK8nQ2xhc3Mn5oiW6ICFJ0Z1bmN0aW9uJ++8jOWImeWPr+S7pem7mOiupOS4uuexu+Wei+WQjeaIluiAheWHveaVsOWQje+8jOWQpuWImeW/hemhu+S8oOWFpWRlcGVuS2V5CiAgICAgIGRlcGVuRGVzOiB7CiAgICAgICAgY3RvcjogcHJvdmlkZXJUeXBlID09PSAnQ2xhc3MnID8gcmVzdWx0IDogdW5kZWZpbmVkLAogICAgICAgIHN0YXRpY0FyZ3VtZW50czogc3RhdGljQXJndW1lbnRzIHx8IFtdLAogICAgICAgIHN1cHBvcnRzRGVsYXllZEluc3RhbnRpYXRpb24KICAgICAgfSwKICAgICAgZGVwZW5JbnN0YW5jZTogcHJvdmlkZXJUeXBlICE9PSAnQ2xhc3MnID8gcmVzdWx0IDogdW5kZWZpbmVkCiAgICB9KTsKICB9IGNhdGNoIChlKSB7CiAgICBjb25zb2xlLmVycm9yKGUpOwogIH0KfTsKCmlmICh0eXBlb2YgUmVnaXN0ZXJTZXJ2aWNlQnlQcm92aWRlciAhPT0gJ3VuZGVmaW5lZCcgJiYgUmVnaXN0ZXJTZXJ2aWNlQnlQcm92aWRlciAmJiBSZWdpc3RlclNlcnZpY2VCeVByb3ZpZGVyID09PSBPYmplY3QoUmVnaXN0ZXJTZXJ2aWNlQnlQcm92aWRlcikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShSZWdpc3RlclNlcnZpY2VCeVByb3ZpZGVyKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWdpc3RlclNlcnZpY2VCeVByb3ZpZGVyLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiUmVnaXN0ZXJTZXJ2aWNlQnlQcm92aWRlciIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2RpL2RlY29yYXRlL2luamVjdG9yLnRzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0IDogdW5kZWZpbmVkOwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihJbmplY3RhYmxlLCAiSW5qZWN0YWJsZSIsICIvVXNlcnMvYTE4MDExNDA1NzA0L0Rlc2t0b3AvY29kZS9kaS1zZXJ2aWNlL3NyYy9kaS9kZWNvcmF0ZS9pbmplY3Rvci50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFJlZ2lzdGVyU2VydmljZUJ5UHJvdmlkZXIsICJSZWdpc3RlclNlcnZpY2VCeVByb3ZpZGVyIiwgIi9Vc2Vycy9hMTgwMTE0MDU3MDQvRGVza3RvcC9jb2RlL2RpLXNlcnZpY2Uvc3JjL2RpL2RlY29yYXRlL2luamVjdG9yLnRzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/a18011405704/Desktop/code/di-service/src/di/decorate/injector.ts"],"names":["saveDependenciesIntances","Injectable","key","supportsDelayedInstantiation","ctor","serviceKey","cotrName","name","console","log","depenKey","depenDes","staticArguments","RegisterServiceByProvider","provider","providerType","result","defaultDepenKey","undefined","Error","depenInstance","e","error"],"mappings":";;;;;;;;;AAAA,SAASA,wBAAT,QAAyC,UAAzC;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAkCC,4BAAlC,EAA0E;AAC/E,SAAO,UAACC,IAAD,EAAoB;AACzB,QAAMC,UAAU,GAAGH,GAAG,IAAIE,IAAI,CAACE,QAAZ,IAAwBF,IAAI,CAACG,IAAhD;AAEAC,IAAAA,OAAO,CAACC,GAAR,wBAA4BJ,UAA5B,QAA2CD,IAA3C;AAEAJ,IAAAA,wBAAwB,CAAC;AACvBU,MAAAA,QAAQ,EAAEL,UADa;AACA;AACvBM,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IADQ;AAERQ,QAAAA,eAAe,EAAE,EAFT;AAGRT,QAAAA;AAHQ;AAFa,KAAD,CAAxB;AAQD,GAbD;AAcD;;;;;;;;;;;;;AAED,OAAO,IAAMU,yBAAyB,GAAG,SAA5BA,yBAA4B,CACvCC,QADuC,EAEvCC,YAFuC,EAGvCV,UAHuC,EAIvCO,eAJuC,EAKvCT,4BALuC,EAMpC;AACH,MAAI;AACF,QAAMa,MAAM,GAAGF,QAAQ,EAAvB;AAEA,QAAMG,eAAe,GAAGF,YAAY,KAAK,OAAjB,GAA4BC,MAAM,CAACT,IAAnC,GAA0CW,SAAlE;AACA,QAAMR,QAAQ,GAAGL,UAAU,IAAIY,eAA/B;;AAEA,QAAG,CAACP,QAAJ,EAAc;AACZ,YAAM,IAAIS,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAED,QAAG,CAACH,MAAJ,EAAY;AACV,YAAM,IAAIG,KAAJ,CAAU,mEAAV,CAAN;AACD;;AAEDnB,IAAAA,wBAAwB,CAAC;AACvBU,MAAAA,QADuB;AACb;AACVC,MAAAA,QAAQ,EAAE;AACRP,QAAAA,IAAI,EAAEW,YAAY,KAAK,OAAjB,GAA2BC,MAA3B,GAAoCE,SADlC;AAERN,QAAAA,eAAe,EAAEA,eAAe,IAAI,EAF5B;AAGRT,QAAAA;AAHQ,OAFa;AAOvBiB,MAAAA,aAAa,EAAEL,YAAY,KAAK,OAAjB,GAA2BC,MAA3B,GAAoCE;AAP5B,KAAD,CAAxB;AASD,GAvBD,CAuBE,OAAOG,CAAP,EAAU;AACVb,IAAAA,OAAO,CAACc,KAAR,CAAcD,CAAd;AACD;AACF,CAjCM;;;;;;;;;;;;;;;;;;;;;;0BAjBSpB,U;0BAiBHY,yB","sourcesContent":["import { saveDependenciesIntances } from '../index';\n\ntype ctorType = { new (...args: any[]): {}; cotrName?: string };\ntype provider = () => any;\n/**\n * @param key \n * @param supportsDelayedInstantiation \n * 申明和实现分离\n * 如何是服务申明执行\n  1.像dva一样在应用启动的时候自己手动注册\n  2.像VSCODE一样全部自己手动注册\n  3.像umi一样读取生成临时文件自动执行注册（如何热更新？）\n */\nexport function Injectable(key?: string, supportsDelayedInstantiation?: boolean) {\n  return (ctor: ctorType) => {\n    const serviceKey = key || ctor.cotrName || ctor.name;\n\n    console.log(`[Injectable] ${serviceKey} `, ctor);\n\n    saveDependenciesIntances({\n      depenKey: serviceKey!, // 直接以类名为键 也可以像angular一样提供proveder解析一下提供服务 来扩展服务的内容\n      depenDes: {\n        ctor,\n        staticArguments: [],\n        supportsDelayedInstantiation,\n      },\n    });\n  };\n}\n\nexport const RegisterServiceByProvider = (\n  provider: provider,\n  providerType: 'Class' | 'Function' | 'Const',\n  serviceKey?: string,\n  staticArguments?: any[],\n  supportsDelayedInstantiation?: boolean,\n) => {\n  try {\n    const result = provider();\n\n    const defaultDepenKey = providerType !== 'Const' ?  result.name : undefined;\n    const depenKey = serviceKey || defaultDepenKey;\n  \n    if(!depenKey) {\n      throw new Error('need a serviceKey.');\n    }\n\n    if(!result) {\n      throw new Error('Can not get Service from provider, check your provider\\'s returns');\n    }\n  \n    saveDependenciesIntances({\n      depenKey, // 如果类型是'Class'或者'Function'，则可以默认为类型名或者函数名，否则必须传入depenKey\n      depenDes: {\n        ctor: providerType === 'Class' ? result : undefined,\n        staticArguments: staticArguments || [],\n        supportsDelayedInstantiation,\n      },\n      depenInstance: providerType !== 'Class' ? result : undefined,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n"]}]}